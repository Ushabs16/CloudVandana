3. Object-Oriented Programming - Employee Management System 
Design a simple Java class Employee with the following attributes: 
• id (integer) 
• name (string) 
• salary (double) 
Create a method displayDetails() to print employee details. 
Write a main method to: 
1. Create at least 3 Employee objects. 
2. Store them in a list. 
3. Display their details.

import java.util.ArrayList;
import java.util.List;

class Employee {
    private int id;
    private String name;
    private double salary;

    public Employee(int id, String name, double salary) {
        this.id = id;
        this.name = name;
        this.salary = salary;
    }

    public void displayDetails() {
        System.out.println("ID: " + id);
        System.out.println("Name: " + name);
        System.out.println("Salary: $" + salary);
        System.out.println("----------------------");
    }
}

class Main {
    public static void main(String[] args) {
        Employee emp1 = new Employee(1091, "Nandy", 55000);
        Employee emp2 = new Employee(1028, "Candy", 62000);
        Employee emp3 = new Employee(1034, "Sandy", 58000);

        List<Employee> employeeList = new ArrayList<>();
        employeeList.add(emp1);
        employeeList.add(emp2);
        employeeList.add(emp3);

        for (Employee emp : employeeList) {
            emp.displayDetails();
        }
    }
}
